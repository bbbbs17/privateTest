plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.3'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'com.zaxxer:HikariCP'
	runtimeOnly 'mysql:mysql-connector-java:8.0.32'  // 'mysql:mysql-connector-java:8.0.32'
	//implementation 'org.springframework.boot:spring-boot-starter-oauth2-client' // ✅ OAuth2 Client
	//implementation 'org.springframework.boot:spring-boot-starter-security' // ✅ Spring Security
	implementation 'io.jsonwebtoken:jjwt-api:0.12.0'   // ✅ API 모듈
	implementation 'io.jsonwebtoken:jjwt-impl:0.12.0'  // ✅ 구현체(필수)
	implementation 'io.jsonwebtoken:jjwt-jackson:0.12.0'  // ✅ JSON 파싱(필수)
	// ✅ Apache Jena 온톨로지 처리
	implementation 'org.apache.jena:apache-jena-libs:4.8.0'

	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	// ✅ JSON 파싱 라이브러리
	implementation 'com.fasterxml.jackson.core:jackson-databind'


	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
}
